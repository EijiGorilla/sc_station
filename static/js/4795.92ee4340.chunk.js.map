{"version":3,"file":"static/js/4795.92ee4340.chunk.js","mappings":";mNAAO,MAAMA,EACA,YADAA,EAEF,UC2BEC,GAAaC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,yLAkGhB,KAAAC,wBAA0B,KAChCC,KAAKC,8CAA8CC,MAAM,iBAzFvB,qBAOI,uCAgDT,KAtB/BC,iBAAAA,GACE,MAAM,GAAEC,GAAOJ,KACfA,KAAKK,aAAcC,EAAAA,EAAAA,GAASF,GAAI,IAChCG,EAAAA,EAAAA,GAAmBP,MAGrBQ,kBAAAA,IACEC,EAAAA,EAAAA,GAAsBT,MAGxBU,oBAAAA,IACEC,EAAAA,EAAAA,GAAsBX,MAmBxBY,MAAAA,GACE,MAAM,SAAEC,EAAQ,QAAEC,EAAO,YAAET,GAAgBL,KAC3C,OACEe,EAAAA,EAAAA,GAACC,EAAAA,GAAI,MACHD,EAAAA,EAAAA,GAACE,EAAAA,EAAoB,CAACJ,SAAUA,IAC9BE,EAAAA,EAAAA,GAAA,MACEG,MAAOvB,EACPwB,MAAO,CAAE,gDAAiD,GAAFC,OAAKf,MAE7DU,EAAAA,EAAAA,GAAA,MAAIG,MAAOvB,EAAa0B,QAASC,EAAAA,GAC9BR,KAGLC,EAAAA,EAAAA,GAAA,QAAMQ,aAAcvB,KAAKD,0ECnHV","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/list-item-group/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/list-item-group/list-item-group.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/list-item-group/list-item-group.scss?tag=calcite-list-item-group&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  heading: \"heading\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { MAX_COLUMNS } from \"../list-item/resources\";\nimport { getDepth } from \"../list-item/utils\";\nimport { CSS } from \"./resources\";\n/**\n * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.\n */\n@Component({\n  tag: \"calcite-list-item-group\",\n  styleUrl: \"list-item-group.scss\",\n  shadow: true,\n})\nexport class ListItemGroup implements InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The header text for all nested `calcite-list-item` rows.\n   *\n   */\n  @Prop({ reflect: true }) heading: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when changes occur in the default slot, notifying parent lists of the changes.\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemGroupDefaultSlotChange: EventEmitter<DragEvent>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { el } = this;\n    this.visualLevel = getDepth(el, true);\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemGroupElement;\n\n  @State() visualLevel: number = null;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { disabled, heading, visualLevel } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <tr\n            class={CSS.container}\n            style={{ \"--calcite-list-item-spacing-indent-multiplier\": `${visualLevel}` }}\n          >\n            <td class={CSS.heading} colSpan={MAX_COLUMNS}>\n              {heading}\n            </td>\n          </tr>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (): void => {\n    this.calciteInternalListItemGroupDefaultSlotChange.emit();\n  };\n}\n",":host {\n  @apply flex flex-col bg-foreground-1;\n  --calcite-list-item-spacing-indent: theme(\"spacing.4\");\n}\n\n:host([filter-hidden]) {\n  @apply hidden;\n}\n\n@include disabled();\n\n.container {\n  @apply bg-foreground-2 text-n1 text-color-2 m-0 flex flex-1 p-3 font-sans font-bold;\n}\n\n.heading {\n  padding-inline-start: calc(\n    var(--calcite-list-item-spacing-indent) * var(--calcite-list-item-spacing-indent-multiplier)\n  );\n}\n\n::slotted(calcite-list-item) {\n  @apply shadow-border-top;\n  margin-block-start: 1px;\n}\n\n// removes shadow for the first item of the group for both filtered and unfiltered items.\n::slotted(calcite-list-item:nth-child(1 of :not([hidden]))) {\n  @apply shadow-none;\n  margin-block-start: 0px;\n}\n\n@include base-component();\n"],"names":["CSS","ListItemGroup","proxyCustomElement","HTMLElement","handleDefaultSlotChange","this","calciteInternalListItemGroupDefaultSlotChange","emit","connectedCallback","el","visualLevel","getDepth","connectInteractive","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","render","disabled","heading","h","Host","InteractiveContainer","class","style","concat","colSpan","MAX_COLUMNS","onSlotchange"],"sourceRoot":""}